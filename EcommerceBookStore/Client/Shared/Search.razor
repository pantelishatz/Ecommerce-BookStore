@inject NavigationManager NavigationManager
@inject IProductService ProductService


<div class="input-group">
    <input @bind-value="searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           class="form-control"
           placeholder="Search..."
           @ref="searchInput" />
    <datalist id="products">
        @foreach(var suggestion in suggestions)
        {
            <option>
                @suggestion
            </option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary mx-2" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

@code {
    private string searchText = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            // Focus the search input when the component is first rendered
            await searchInput.FocusAsync();
        }
    }

    public void SearchProducts()
    {
        // Navigate to the search results page with the entered searchText
        NavigationManager.NavigateTo($"search/{searchText}/1");
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            // If the Enter key is pressed, perform the search
            SearchProducts();
        }
        else if (searchText.Length > 1)
        {
            // If the searchText is longer than one character, get search suggestions
            suggestions = await ProductService.GetProductSearchSuggestions(searchText);

        }
    }
}
